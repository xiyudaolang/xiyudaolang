#归并排序

public void merge(int a[],int start,int mid,int end){
  int n1=mid-start+1;
  int n2=end-mid;
  int left[n1];
  int right[n2];
  int i,j,k;
  for(i=0;i<n1;i++){
    left[i]=a[start+i];
  }
  for(j=0;j<n2;j++){
    right[j]=a[mid+1+i];
  }
  i=j=0;
  k=start;
  while(i<n1 && j<n2)
    if(left[i]<right[j])
      a[k++]=left[i++];
    else
      a[k++]=right[j++];
  while(i<n1)
    a[k++]=left[i++];
  while(j<n2)
    a[k++]=right[j++];
}

public void sort(int start,int end){
  int mid=0;
  if(start<end)
    mid=(start+end)/2;
  sort(start,mid);
  sort(mid+1,end);
  merge(start,mid,end);
}
